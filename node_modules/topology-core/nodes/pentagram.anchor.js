"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var point_1 = require("../../models/point");
var direction_1 = require("../../models/direction");
function pentagramAnchors(node) {
    node.anchors.push(new point_1.Point((Math.cos((18 / 180) * Math.PI) * node.rect.width) / 2 + node.rect.x + node.rect.width / 2, (-Math.sin((18 / 180) * Math.PI) * node.rect.width) / 2 + node.rect.y + node.rect.height / 2, direction_1.Direction.Right));
    node.anchors.push(new point_1.Point((Math.cos(((18 + 72) / 180) * Math.PI) * node.rect.width) / 2 + node.rect.x + node.rect.width / 2, (-Math.sin(((18 + 72) / 180) * Math.PI) * node.rect.width) / 2 + node.rect.y + node.rect.height / 2, direction_1.Direction.Up));
    node.anchors.push(new point_1.Point((Math.cos(((18 + 72 * 2) / 180) * Math.PI) * node.rect.width) / 2 + node.rect.x + node.rect.width / 2, (-Math.sin(((18 + 72 * 2) / 180) * Math.PI) * node.rect.width) / 2 + node.rect.y + node.rect.height / 2, direction_1.Direction.Left));
    node.anchors.push(new point_1.Point((Math.cos(((18 + 72 * 3) / 180) * Math.PI) * node.rect.width) / 2 + node.rect.x + node.rect.width / 2, (-Math.sin(((18 + 72 * 3) / 180) * Math.PI) * node.rect.width) / 2 + node.rect.y + node.rect.height / 2, direction_1.Direction.Bottom));
    node.anchors.push(new point_1.Point((Math.cos(((18 + 72 * 4) / 180) * Math.PI) * node.rect.width) / 2 + node.rect.x + node.rect.width / 2, (-Math.sin(((18 + 72 * 4) / 180) * Math.PI) * node.rect.width) / 2 + node.rect.y + node.rect.height / 2, direction_1.Direction.Bottom));
}
exports.pentagramAnchors = pentagramAnchors;
//# sourceMappingURL=pentagram.anchor.js.map